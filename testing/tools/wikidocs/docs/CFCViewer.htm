
[[Dashboard | << Back to Dashboard ]]

{| align="right"
| __TOC__
|}

= Exploring the CFCViewer Plugin =


== Overview ==
This provides functionality to obtain information about CFCs via introspection and generate cool documentation about them.


== setRenderingTemplate ==
Set the rendering template to use

=== Returns ===
* This function returns ''void''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| RenderingTemplate || string || Yes || --- || 
|}

=== Examples ===

== renderit ==
Render the content

=== Returns ===
* This function returns ''any''


=== Examples ===

== getlinkType ==
Get linkType

=== Returns ===
* This function returns ''string''


=== Examples ===

== getDirpath ==
Get the dirpath of where the cfc's reside. This is expanded.

=== Returns ===
* This function returns ''string''


=== Examples ===

== getaCFC ==
returns an array with the names of all components within the current directory

=== Returns ===
* This function returns ''array''


=== Examples ===

== setup ==
Use this method to initialize for documentation. You must persist it in your request so you can do renderings and interact with the object.

=== Returns ===
* This function returns ''CFCViewer''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| dirpath || string || Yes || --- || The directory path to which is the root of what you want the cfcviewer to report on. This must be a valid instantiation path: ex: /coldbox/system
|-
| accessTypesFilter || string || No ||  || Use this argument to only display methods with the access types given. If empty, displays all methods (public, private, remote, package).
|-
| dirLink || string || No || --- || If you pass this. it will create a linkable directory or package structure according to the link provided and append an internal package variable.
|-
| jsLink || string || No || --- || If you pass this, it will create a linkable package according to the js provided. Also, place a @package@ on your link, so it can correctly identify where to place the url parameter for the package choosen
|-
| RenderingTemplate || string || No || --- || Override the rendering template with yours
|-
| LinkBaseURL || string || No || --- || The base url to use for anchors
|}

=== Examples ===

== setlinkType ==
Set linkType

=== Returns ===
* This function returns ''void''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| linkType || string || Yes || --- || 
|}

=== Examples ===

== buildLink ==
Build a link for a package name

=== Returns ===
* This function returns ''string''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| package || string || Yes || --- || 
|}

=== Examples ===

== getrootPath ==
Get rootPath

=== Returns ===
* This function returns ''string''


=== Examples ===

== buildRootLink ==
Build a link for a root name

=== Returns ===
* This function returns ''string''


=== Examples ===

== setlstAccessTypes ==
Set lstAccessTypes

=== Returns ===
* This function returns ''void''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| lstAccessTypes || string || Yes || --- || 
|}

=== Examples ===

== setLinkBaseURL ==


=== Returns ===
* This function returns ''void''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| LinkBaseURL || string || Yes || --- || 
|}

=== Examples ===

== getStyleSheet ==
Get the stylesheet to use when rendering the documentation.

=== Returns ===
* This function returns ''string''


=== Examples ===

== setrootPath ==
Set rootPath

=== Returns ===
* This function returns ''void''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| rootPath || string || Yes || --- || 
|}

=== Examples ===

== setdirpath ==
Set the dirpath

=== Returns ===
* This function returns ''void''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| dirpath || string || Yes || --- || 
|}

=== Examples ===

== getCFCMetaData ==
returns a structure with information about the given component. This structure contains information about returntype, methods, parameters, etc.

=== Returns ===
* This function returns ''any''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| cfcName || string || Yes || --- || The name of the cfc
|}

=== Examples ===

== setStyleSheet ==
Set the stylesheet to use when rendering the documentation

=== Returns ===
* This function returns ''void''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| styleSheet || string || Yes || --- || 
|}

=== Examples ===

== setaPacks ==
Set aPacks

=== Returns ===
* This function returns ''void''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| aPacks || array || Yes || --- || 
|}

=== Examples ===

== getRenderingTemplate ==
Get rendering template to use

=== Returns ===
* This function returns ''string''


=== Examples ===

== getlinkString ==
Get linkString

=== Returns ===
* This function returns ''string''


=== Examples ===

== getaPacks ==
Get aPacks

=== Returns ===
* This function returns ''array''


=== Examples ===

== setaCFC ==
Set CFCs

=== Returns ===
* This function returns ''void''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| aCFC || array || Yes || --- || 
|}

=== Examples ===

== getLinkBaseURL ==


=== Returns ===
* This function returns ''string''


=== Examples ===

== getlstAccessTypes ==
Get lstAccessTypes

=== Returns ===
* This function returns ''string''


=== Examples ===

== setlinkString ==
Set linkString

=== Returns ===
* This function returns ''void''


=== Arguments ===

{| cellpadding="5", class="tablelisting"
! '''Key''' !! '''Type'''  !! '''Required''' !! '''Default''' !! '''Description''' 
|-
| linkString || string || Yes || --- || 
|}

=== Examples ===
