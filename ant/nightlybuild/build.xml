<?xml version="1.0" encoding="utf-8"?>
<project name="ColdBox NightlyBuild" default="help" basedir=".">

	<description>ColdBox Nightly Build File</description>

	<!-- common values for build file -->
	<property file="common.properties"/>
	
	<!-- set a default target that can be modified -->
	<property name="target" value="localhost"/>
	
	<!-- default property filename for target properties -->
	<property file="${target}.properties"/>

	<!-- dynamic values for build -->
	<tstamp prefix="start"/>
	<property name="build.label" value="BUILD-${start.DSTAMP}${start.TSTAMP}"/>
	
	<!-- load the svn task from %ANT_HOME%/lib -->
	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml"/>

	<!--Git command-->
	<macrodef name = "git">
	    <attribute name = "command" />
	    <attribute name = "dir" default = "" />
	    <element name = "args" optional = "true" />
	    <sequential>
	        <echo message = "git @{command}" />
	        <exec executable = "C:\Program Files\Git\bin\git.exe" dir = "@{dir}">
	            <arg value = "@{command}" />
	            <args/>
	        </exec>
	    </sequential>
	</macrodef>

	<!-- Help -->
	<target name="help" depends="usage"></target>
	
	<!-- Usage INformation -->
	<target name="usage" description="Usage information">
		<echo>
		Used to create a nightly coldbox build
			 
		Basic syntax:	ant [task(s)]
		
		Common tasks:
			export-app
			build
			archive
			clean
		
		The default ant task is: help
		</echo>
	</target>

	<!-- init -->
	<target name="init" description="Initializes a project and all relevant data">
		<mkdir dir="${src.dir}"/>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>
	</target>

	<!-- clean -->
	<target name="clean" description="Remove all directories">
		<delete dir="${src.dir}" verbose="true"/> 
		<delete dir="${build.dir}" verbose="true"/> 
		<delete dir="${dist.dir}" verbose="true"/> 
	</target>

	<!--export app-->
	<target name="export-app" depends="clean,init" description="Clean export of entire application">
		<!-- clone cfbuilder extensions -->
		<git command = "clone">
		    <args>
		    	<arg value = "-v" />
		    	<arg value = "${git.cfbuilderextension}" />
		        <arg value = "${src.dir}/coldbox-platform-utilities" />
		    </args>
		</git>
		<!-- clone distro -->
		<git command = "clone">
		    <args>
		    	<arg value = "-v" />
		    	<arg value = "${git.distrourl}" />
		        <arg value = "${src.dir}/coldbox" />
		    </args>
		</git>
		
		<!-- clone samples -->
		<git command = "clone">
		    <args>
		    	<arg value = "-v" />
		    	<arg value = "${git.samplesurl}" />
		        <arg value = "${src.dir}/coldbox-samples" />
		    </args>
		</git>
	</target>

	<!--Build distro-->
	<target name="build" depends="export-app" description="Copies fileset from source to build directory, adding a label file">
		<!-- Copy Structure -->
		<move todir="${build.dir}/coldbox">
        	<fileset dir="${src.dir}/coldbox">
				<exclude name="**/.git" />
				<exclude name="**/.git/**" />
        	</fileset>
        </move>		
		<move todir="${build.dir}/coldbox/samples">
        	<fileset dir="${src.dir}/coldbox-samples">
				<exclude name="**/.git" />
				<exclude name="**/.git/**" />
        	</fileset>
        </move>	
		<move todir="${build.dir}/coldbox-platform-utilities">
        	<fileset dir="${src.dir}/coldbox-platform-utilities">
				<exclude name="**/.git" />
				<exclude name="**/.git/**" />
        	</fileset>
        </move>
		<!--Remove src-->
		<delete dir="${src.dir}"/>
		<!--contact build-->
		<concat destfile="${build.dir}\${build.label}">Built on ${start.TODAY}</concat>
	</target>
		
	<!-- Create Archive -->
	<target name="archive" depends="build" description="Creates a zip archive of site for (re)distribution">
		
		<!-- zip distro -->
		<zip destfile="${dist.dir}/coldboxNB.zip"
	       	 basedir="${build.dir}"
	         update="true"/>
		
		<!-- delete build -->
		<delete dir="${build.dir}"/>
		
		<!-- copy to distro -->
		<copy todir="${coldboxdownload.dir}">
			<fileset dir="${dist.dir}"/>
		</copy>
		
		<!-- delete distro -->
		<delete dir="${dist.dir}"/>		
	</target>
	
</project>