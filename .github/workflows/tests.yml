# This is a reusable workflow for executing the full ColdBox Test Suites
name: ColdBox Test Suites

# We are a reusable Workflow only
on:
  workflow_call:
    secrets:
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  tests:
    name: Test Suites
    runs-on: ubuntu-20.04
    env:
      DB_USER: root
      DB_PASSWORD: root
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        #cfengine: [ "lucee@5", "adobe@2018", "adobe@2021" ]
        cfengine: [ "adobe@2018", "adobe@2021" ]
        experimental: [false]
        #include:
        #  - cfengine: "lucee@5rc"
        #    experimental: true
        #  - cfengine: "lucee@6"
        #    experimental: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Database and Fixtures
        run: |
          sudo systemctl start mysql.service
          mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} -e 'CREATE DATABASE coolblog;'
          mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} < tests/resources/coolblog.sql

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Setup CommandBox CLI
        uses: Ortus-Solutions/setup-commandbox@v2.0.1
        with:
          version: 5.7.0

      - name: Setup .env For Runner
        run: |
          touch .env
          printf "DB_HOST=127.0.0.1\n" >> .env
          printf "DB_DATABASE=coolblog\n" >> .env
          printf "DB_DRIVER=MySQL\n" >> .env
          printf "DB_USER=${{ env.DB_USER }}\n" >> .env
          printf "DB_PASSWORD=${{ env.DB_PASSWORD }}\n" >> .env
          printf "DB_CLASS=com.mysql.cj.jdbc.Driver\n" >> .env
          printf "DB_BUNDLEVERSION=8.0.19\n" >> .env
          printf "DB_BUNDLENAME=com.mysql.cj\n" >> .env

      - name: Cache CommandBox Dependencies
        uses: actions/cache@v3
        if: ${{ true }}
        with:
          path: ~/.CommandBox/artifacts
          key: ${{ runner.OS }}-commandbox-cache-${{ hashFiles( 'box.json' ) }}
          restore-keys: |
            ${{ runner.OS }}-commandbox-cache-${{ hashFiles( 'box.json' ) }}

      - name: Install Dependencies
        run: |
          # Core dependencies
          box install
          # API Docs dependencies
          cd apidocs && box install

      - name: Start ${{ matrix.cfengine }} Server
        run: |
          box server start serverConfigFile="server-${{ matrix.cfengine }}.json" --noSaveSettings --debug
          # Test the harness
          curl http://127.0.0.1:8599/test-harness

      - name: Run Tests
        run: |
          ant -f build/build.xml run-tests

      - name: Set cfengine version env
        run: echo "CFENGINE_VERSION=$(box echo ${serverInfo.engineName@coldbox-${{ matrix.cfengine }}}@${serverInfo.engineVersion@coldbox-${{ matrix.cfengine }}})" >> $GITHUB_ENV

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: tests/results/**/*.xml
          check_name: "${{ env.CFENGINE_VERSION }} Test Results"

      - name: Upload Test Results Artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: coldbox-test-results-${{ matrix.cfengine }}
          path: |
            tests/results/**/*

      - name: Slack Notification
        # Only on failures and NOT in pull requests
        if: ${{ failure() && !startsWith( 'pull_request', github.event_name ) }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: coding
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'green' or '#ff00ff'
          SLACK_ICON_EMOJI: ":bell:"
          SLACK_MESSAGE: 'ColdBox tests failed :cry:, check them out here: https://github.com/coldbox/coldbox-platform/actions'
          SLACK_TITLE: ColdBox Tests For ${{ matrix.cfengine }} failed
          SLACK_USERNAME: CI
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Failure Debugging Info
        if: ${{ failure() }}
        run: |
          box server log serverConfigFile="server-${{ matrix.cfengine }}.json"

      - name: Upload Debugging Info To Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: Failure Debugging Info - ${{ matrix.cfengine }}
          path: |
            .engine/**/logs/*
            .engine/**/WEB-INF/cfusion/logs/*
