<?xml version="1.0"?>
<!-- ====================================================================== 
     LogBox Standalone Build (www.coldbox.org)                                                     
     ====================================================================== -->
<project name="logbox-build" default="build" basedir="../">
	<description>
    	Build a new distribution of LogBox Standalone
    </description>
	<!-- UPDATE ON EACH VERSION -->
	<property name="logbox.version" value="2.0.0" />
	<property name="logbox.slug"	 value="logbox"/>

	<!-- Build Labels -->
	<tstamp prefix="start"/>
	<!-- Load Contrib Tasks -->
	<path id="cp">
		<fileset dir="build/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<!-- Define Tasks -->
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="cp" />
	
	<!-- Init -->
	<target name="init" description="Init">
		<!-- Default environment check, if not passed via -Denvironment -->
		<condition property="environment" value="local">
			<not><isset property="environment" /></not>
		</condition>
		<if>
			<available file="build/logbox-${environment}.properties" />
			<then>
				<!-- Load env properties -->
				<echo>Loading properties from environment: ${environment}</echo>
				<loadproperties srcFile="build/logbox-${environment}.properties"/>
			</then>
		</if>
		<!-- Load root properties -->
		<echo>Loading base properties</echo>
		<loadproperties srcFile="build/logbox.properties"/>

		<!-- Build Number -->
		<propertyfile file="build/build.number" comment="Build Number for ANT. Edit not!">
			<entry key="build.number" 
					type="int" 
			     	operation="+"
					pattern="00000"
			     	default="1" />
		</propertyfile>
		<property file="build/build.number"/>
		<!-- Build Label -->
		<property name="build.label" value="logbox-${logbox.version}.${build.number}-${start.DSTAMP}${start.TSTAMP}"/>
		<!-- Cleanup + Init -->
		<delete dir="${dir.build}" />
		<mkdir dir="${dir.build}/logbox/apidocs"/>
		<chmod file="${dir.build}/**" perm="g+wxrs" type="both" />
		<!-- If stg, change perms and owners -->
		<if>
			<equals arg1="${environment}" arg2="auto" />
			<then>
				<chmod file="${dir.build}/**" perm="o+wrs" type="both" verbose="true" />
				<chown owner="stg-ortus" verbose="true">
					<fileset dir="${dir.build}" />
				</chown>
			</then>
		</if>
	</target>
		
	<!--build-->
	<target name="build" description="Build a new LogBox distribution" depends="init">
		
		<!-- Copy build ID -->
		<concat destfile="${dir.build}/logbox/${build.label}">Built on ${start.TODAY}</concat>
		
		<!-- Copy src to logbox namespace-->	
      	<copy todir="${dir.build}/logbox/system/logging">
        	<fileset dir="system/logging" />
        </copy>
		<copy todir="${dir.build}/logbox/system/core">
        	<fileset dir="system/core">
        		<include name="util/*" />
        		<include name="dynamic/*" />
        		<include name="collections/*" />
        		<include name="conversion/*" />
        	</fileset>
        </copy>

        <!--Copy text files to root folder-->
		<copy todir="${dir.build}/logbox">
			<fileset file="license.txt" />
			<fileset file="system/logging/readme.txt" />						
		</copy>
		
		<!--Copy box.json to root -->
		<copy toFile="${dir.build}/box.json" file="box-logbox.json" />

        <!-- Replace Build Numbers -->
		<replaceregexp match='@build.number@' replace="${build.number}" flags="ig" byline="true">
		  <fileset dir="${dir.build}">
		  </fileset>
		</replaceregexp>
		
		<!-- Refactor logbox namespace -->
		<echo>Refactoring for coldbox absolute paths</echo>
		<replace dir="${dir.build}" value="/logbox/system/" summary="yes">
		  	<include name="**/*.cfc" />
			<include name="**/*.cfm" />
			<include name="**/*.xml" />
			<replacetoken>/coldbox/system/</replacetoken>
		</replace>
		<echo>Refactoring for coldbox instantitation and cfc paths</echo>
		<replace dir="${dir.build}" value="logbox.system." summary="yes">
		  	<include name="**/*.cfc" />
			<include name="**/*.cfm" />
			<include name="**/*.xml" />
			<replacetoken>coldbox.system.</replacetoken>
		</replace>
		
		<!-- Execute ColdDoc -->
		<get dest="${dir.build}/colddoc.html" src="${url.api}${logbox.version}&amp;path=${dir.api}&amp;logbox_root=${dir.build}/logbox" verbose="true"/>
		<delete file="${dir.build}/colddoc.html" />
		
		<!-- Zip API Docs -->
		<zip destfile="${dir.exports}/logbox_apidocs_${logbox.version}.zip" basedir="${dir.build}/logbox/apidocs"></zip>
		<!-- Zip Bundle -->
		<zip destfile="${dir.exports}/logbox_${logbox.version}.zip" basedir="${dir.build}"></zip>
		<!-- Build Checksum -->
		<checksum forceoverwrite="true" fileext=".md5">
			<fileset dir="${dir.exports}">
				<include name="*.zip" />
			</fileset>
		</checksum>
		
		<!-- Perms for automated builds -->
		<chmod file="${dir.build}/**" perm="g+wxrs" type="both" />
		<!-- Move BE to root -->
		<if>
			<equals arg1="${be.name}" arg2="" />
			<then></then>
			<else>
				<delete>
					<fileset dir="${be.exports}">
						<include name="${be.name}*" />
					</fileset>
				</delete>
				<copy file="${dir.exports}/logbox_${logbox.version}.zip" tofile="${be.exports}/${be.name}.zip" />	
				<copy file="${dir.exports}/logbox_${logbox.version}.zip.md5" tofile="${be.exports}/${be.name}.zip.md5" />
			</else>
		</if>
		
		<!-- Cleanup -->
		<delete dir="${dir.build}" />
    </target>
</project>
