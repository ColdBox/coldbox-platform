<?xml version="1.0"?>
<!-- ====================================================================== 
     ColdBox Platform Build (www.coldbox.org)                                                               
     ====================================================================== -->
<project name="coldbox-build" default="build" basedir="../">
	<description>
    	Build a new distribution of ColdBox Platform
    </description>
	
	<!-- UPDATE ON EACH VERSION -->
	<property name="coldbox.version" value="4.0.0" />
	<property name="coldbox.slug"	 value="coldbox"/>
	
	<!-- Build Labels -->
	<tstamp prefix="start"/>
	<!-- Load Contrib Tasks -->
	<path id="cp">
		<fileset dir="build/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<!-- Define Tasks -->
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="cp" />
	
	<!--External Ant Tasks-->
	<property name="ant.compilechecks"  value="build/ant_compile.xml" />
	
	<!-- Init -->
	<target name="init" description="Init Build">
		<!-- Default environment check, if not passed via -Denvironment -->
		<condition property="environment" value="local">
			<not><isset property="environment" /></not>
		</condition>
		<if>
			<available file="build/coldbox-${environment}.properties" />
			<then>
				<!-- Load env properties -->
				<echo>Loading properties from environment: ${environment}</echo>
				<loadproperties srcFile="build/coldbox-${environment}.properties"/>
			</then>
		</if>
		<!-- Load root properties -->
		<echo>Loading base properties</echo>
		<loadproperties srcFile="build/coldbox.properties"/>

		<!-- Build Number -->
		<propertyfile file="build/build.number" comment="Build Number for ANT. Edit not!">
			<entry key="build.number" 
					type="int" 
			     	operation="+"
					pattern="00000"
			     	default="1" />
		</propertyfile>
		<property file="build/build.number"/>
		<!-- Build Label -->
		<property name="build.label" value="coldbox-${coldbox.version}.${build.number}-${start.DSTAMP}${start.TSTAMP}"/>
		<!-- Cleanup + Init -->
		<delete dir="${dir.build}" />
		<mkdir dir="${dir.build}/coldbox/apidocs"/>
		<chmod file="${dir.build}/**" perm="g+wxrs" type="both" />
		<!-- Integration permissions -->
		<if>
			<equals arg1="${environment}" arg2="auto" />
			<then>
				<chmod file="${dir.build}/**" perm="o+wrs" type="both" verbose="true" />
				<chown owner="stg-ortus" verbose="true">
					<fileset dir="${dir.build}" />
				</chown>
			</then>
			<else>
			</else>
		</if>
	</target>
	
	<!-- Build test reports -->
    <target name="run-tests">
        <subant target="run-junit">
          	<fileset dir="tests" includes="automation/test.xml"/>
    		<property name="environment" value="${environment}" />
        </subant>
    </target>
	
	<!--build-->
	<target name="build" description="Build a new ColdBox Platform distribution" depends="init">
      	
		<!-- Copy build ID -->
		<concat destfile="${dir.build}/coldbox/${build.label}">Built on ${start.TODAY}</concat>
		
		<!-- Copy src -->	
      	<copy todir="${dir.build}/coldbox/system">
        	<fileset dir="system">
        	</fileset>
        </copy>

		<!-- Install folder -->
		<copy todir="${dir.build}/coldbox/install">
        	<fileset dir="install">
        		<exclude name="ColdboxCheatSheet.pages" />
        	</fileset>
        </copy>
		
		<!--AppTemplate-->
		<copy todir="${dir.build}/coldbox/ApplicationTemplates">
        	<fileset dir="ApplicationTemplates" />
        </copy>
		
		<!--Copy text files to install folder-->
		<copy todir="${dir.build}/coldbox">
			<fileset file="license.txt" />
			<fileset file="readme.txt" />						
		</copy>
		
		<!-- Copy box.json -->
		<copy file="box.json" toFile="${dir.build}/box.json" />

		<!-- Replace Build Numbers -->
		<replaceregexp match='@build.number@' replace="${build.number}" flags="ig" byline="true">
		  <fileset dir="${dir.build}">
		  </fileset>
		</replaceregexp>
		
		<!-- Execute IDE Dictionaries -->
		<get dest="${dir.build}/cfbuilder.html" src="${url.dictionaries}/builderDictionary.cfm" verbose="true"/>
		<delete file="${dir.build}/cfbuilder.html" />
		<get dest="${dir.build}/sublime.html" src="${url.dictionaries}/sublime-completions.cfm" verbose="true"/>
		<delete file="${dir.build}/sublime.html" />

		<!-- Execute DocBox -->
		<get dest="${dir.build}/colddoc.html" src="${url.api}${coldbox.version}&amp;path=${dir.api}&amp;coldbox_root=${dir.build}/coldbox" verbose="true"/>
		<delete file="${dir.build}/colddoc.html" />
		
		<!-- Zip API Docs -->
		<zip destfile="${dir.exports}/coldbox_apidocs_${coldbox.version}.zip" basedir="${dir.build}/coldbox/apidocs"></zip>
		<!-- Zip Bundle -->
		<zip destfile="${dir.exports}/coldbox_${coldbox.version}.zip" basedir="${dir.build}"></zip>
		<!-- Build Checksum -->
		<checksum forceoverwrite="true" fileext=".md5">
			<fileset dir="${dir.exports}">
				<include name="*.zip" />
			</fileset>
		</checksum>
		
		<!-- Perms for automated builds -->
		<chmod file="${dir.build}/**" perm="g+wxrs" type="both" />
		
		<!-- Bleeding edge, always stored in root of integration server -->
		<if>
			<equals arg1="${be.name}" arg2="" />
			<then></then>
			<else>
				<copy file="${dir.exports}/coldbox_${coldbox.version}.zip" tofile="${be.exports}/${be.name}.zip" />
				<copy file="${dir.exports}/coldbox_${coldbox.version}.zip.md5" tofile="${be.exports}/${be.name}.zip.md5" />
			</else>
		</if>

		<!-- Cleanup for StandAlone Build -->
		<delete dir="${dir.build}/coldbox/ApplicationTemplates"/>
		<delete dir="${dir.build}/coldbox/apidocs" />
		<delete dir="${dir.build}/coldbox/test-runner" />
		<delete dir="${dir.build}/coldbox/test-browser" />
		<delete dir="${dir.build}/coldbox/install" />
		<copy todir="${dir.build}/coldbox">
			<fileset file="license.txt" />
			<fileset file="readme.txt" />
		</copy>	
		<copy todir="${dir.build}">
			<fileset file="box.json" />
		</copy>
		
		<!-- Zip Standalone -->
		<zip destfile="${dir.exports}/coldbox_standalone_${coldbox.version}.zip" basedir="${dir.build}"></zip>
		<!-- Build Checksum -->
		<checksum forceoverwrite="true" fileext=".md5" file="${dir.exports}/coldbox_standalone_${coldbox.version}.zip" />
				
		<!-- Perms for automated builds -->
		<if>
			<equals arg1="${be.name}" arg2="" />
			<then></then>
			<else>
				<delete>
					<fileset dir="${be.exports}">
						<include name="${be.name}*" />
					</fileset>
				</delete>
				<copy file="${dir.exports}/coldbox_standalone_${coldbox.version}.zip" tofile="${be.exports}/${be.name}_standalone.zip" />
				<copy file="${dir.exports}/coldbox_standalone_${coldbox.version}.zip.md5" tofile="${be.exports}/${be.name}_standalone.zip.md5" />
			</else>
		</if>
		
		<!-- Cleanup -->
		<delete dir="${dir.build}" />
    </target>
	
	<target name="docs" depends="init" description="Generate docs only">
		
		<!-- Copy src -->	
      	<copy todir="${dir.build}/coldbox/system">
        	<fileset dir="system">
        	</fileset>
        </copy>

		<!-- Execute DocBox -->
		<get dest="${dir.build}/colddoc.html" src="${url.api}${coldbox.version}&amp;path=${dir.api}&amp;coldbox_root=${dir.build}/coldbox" verbose="true"/>
		<delete file="${dir.build}/colddoc.html" />
		
		<!-- Zip API Docs -->
		<zip destfile="${dir.exports}/coldbox_apidocs_${coldbox.version}.zip" basedir="${dir.build}/coldbox/apidocs"></zip>
		
		<!-- Cleanup -->
		<delete dir="${dir.build}" />
				
	</target>
	
</project>
